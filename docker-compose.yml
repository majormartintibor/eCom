services:

# Catalogue
    # catalogue:
    #   build:
    #     context: .
    #     dockerfile: eCom.Catalogue/Dockerfile
    #   container_name: Catalogue
    #   environment: 
    #     - ASPNETCORE_ENVIRONMENT=Development 
    #     - ASPNETCORE_URLS=http://+:80
    #   ports:
    #     - 5000:80
    #   depends_on:
    #     - catalogue.database

    # catalogue.database:
    #   image: postgres:latest
    #   container_name: CatalogueDatabase
    #   environment:
    #     - POSTGRES_DB=CatalogueDb
    #     - POSTGRES_USER=postgres
    #     - POSTGRES_PASSWORD=postgres
    #   ports:
    #     - 5432:5432

# Inventory
    # inventory:
    #   build:
    #     context: .
    #     dockerfile: eCom.Inventory/Dockerfile
    #   container_name: Inventory
    #   environment: 
    #     - ASPNETCORE_ENVIRONMENT=Development 
    #     - ASPNETCORE_URLS=http://+:80
    #   ports:
    #     - 5001:80
    #   depends_on:
    #     - inventory.database 

    # inventory.database:
    #   image: postgres:latest
    #   container_name: InventoryDatabase
    #   environment:
    #     - POSTGRES_DB=InventoryDb
    #     - POSTGRES_USER=postgres
    #     - POSTGRES_PASSWORD=postgres
    #   ports:
    #     - 5433:5432

# Payment
    # payment:
    #   build:
    #     context: .
    #     dockerfile: eCom.Payment/Dockerfile
    #   container_name: Payment
    #   environment: 
    #     - ASPNETCORE_ENVIRONMENT=Development 
    #     - ASPNETCORE_URLS=http://+:80
    #   ports:
    #     - 5002:80
    #   depends_on:
    #     - payment.database 

    # payment.database:
    #   image: postgres:latest
    #   container_name: PaymentDatabase
    #   environment:
    #     - POSTGRES_DB=PaymentDb
    #     - POSTGRES_USER=postgres
    #     - POSTGRES_PASSWORD=postgres
    #   ports:
    #     - 5434:5432
 
# Procurement
    # procurement:
    #   build:
    #     context: .
    #     dockerfile: eCom.Procurement/Dockerfile
    #   container_name: Procurement
    #   environment: 
    #     - ASPNETCORE_ENVIRONMENT=Development 
    #     - ASPNETCORE_URLS=http://+:80
    #   ports:
    #     - 5003:80            
    #   depends_on:
    #     - procurement.database 

    # procurement.database:
    #   image: postgres:latest
    #   container_name: ProcurementDatabase
    #   environment:
    #     - POSTGRES_DB=ProcurementDb
    #     - POSTGRES_USER=postgres
    #     - POSTGRES_PASSWORD=postgres
    #   ports:
    #     - 5435:5432

# Product
    # product:
    #   build:
    #     context: .
    #     dockerfile: eCom.Product/Dockerfile
    #   container_name: Product
    #   environment: 
    #     - ASPNETCORE_ENVIRONMENT=Development 
    #     - ASPNETCORE_URLS=http://+:80
    #   ports:
    #     - 5004:80            
    #   depends_on:
    #     - product.database 

    # product.database:
    #   image: postgres:latest
    #   container_name: ProductDatabase
    #   environment:
    #     - POSTGRES_DB=ProductDb
    #     - POSTGRES_USER=postgres
    #     - POSTGRES_PASSWORD=postgres
    #   ports:
    #     - 5436:5432

# Shipping
    # shipping:
    #   build:
    #     context: .
    #     dockerfile: eCom.Shipping/Dockerfile
    #   container_name: Shipping
    #   environment: 
    #     - ASPNETCORE_ENVIRONMENT=Development 
    #     - ASPNETCORE_URLS=http://+:80
    #   ports:
    #     - 5005:80            
    #   depends_on:
    #     - shipping.database 

    # shipping.database:
    #   image: postgres:latest
    #   container_name: ShippingDatabase
    #   environment:
    #     - POSTGRES_DB=ShippingDb
    #     - POSTGRES_USER=postgres
    #     - POSTGRES_PASSWORD=postgres
    #   ports:
    #     - 5437:5432

# ShoppingCart
    shoppingcart:
      build:
        context: .
        dockerfile: eCom.ShoppingCart/eCom.ShoppingCart/Dockerfile
      container_name: ShoppingCart
      environment: 
        - ASPNETCORE_ENVIRONMENT=Development 
        - ASPNETCORE_URLS=http://+:80
      ports:
        - 5006:80            
      depends_on:
        - shoppingcart.database 

    shoppingcart.database:
      image: postgres:latest
      container_name: ShoppingCartDatabase
      environment:
        - POSTGRES_DB=ShoppingCartDb
        - POSTGRES_USER=postgres
        - POSTGRES_PASSWORD=postgres
      ports:
        - 5438:5432

# UI
    # ui:
    #  build:
    #    context: .
    #    dockerfile: eCom.UI/Dockerfile
    #  container_name: UI
    #  # environment:
    #  #    - ASPNETCORE_ENVIRONMENT=Development
    #  #    - API_BASE_URL=https://api.example.com
    #  #    - AUTHORITY=https://identity.example.com
    #  #    - CLIENT_ID=myclientid
    #  #    - REDIRECT_URI=https://app.example.com/authentication/login-callback
    #  #    - POST_LOGOUT_REDIRECT_URI=https://app.example.com/authentication/logout-callback
    #  ports:
    #    - 8080:80

# INFRA

 #Transport


 #Identity
    # eCom.identity:
    #  image: quay.io/keycloak/keycloak:latest
    #  container_name: eCom.Identity
    #  command: start-dev #--import-realm
    #  environment:
    #    - KC_HEALTH_ENABLED=true
    #    - KEYCLOAK_ADMIN=admin
    #    - KEYCLOAK_ADMIN_PASSWORD=admin
    #  volumes:
    #    - ./.containers/identity:/opt/keycloak/data
    #    - ./.files:/opt/keycloak/data/import
    #  ports:
    #    - 18080:8080

    # eCom.redis:
    #  image: redis:latest
    #  container_name: meShop.Redis
    #  restart: always
    #  ports:
    #    - 6379:6379